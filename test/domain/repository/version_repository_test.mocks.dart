// Mocks generated by Mockito 5.1.0 from annotations
// in leaguechamps/test/domain/repository/version_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:leaguechamps/data/repositories/version_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [VersionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockVersionRepository extends _i1.Mock implements _i2.VersionRepository {
  MockVersionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> getVersion() =>
      (super.noSuchMethod(Invocation.method(#getVersion, []),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<List<dynamic>> getVersionList() =>
      (super.noSuchMethod(Invocation.method(#getVersionList, []),
              returnValue: Future<List<dynamic>>.value(<dynamic>[]))
          as _i3.Future<List<dynamic>>);
}
