// Mocks generated by Mockito 5.1.0 from annotations
// in leaguechamps/test/domain/use_cases/get_champion_list_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;
import 'dart:ui' as _i5;

import 'package:leaguechamps/domain/entities/champion.dart' as _i4;
import 'package:leaguechamps/domain/use_cases/get_champion_list_usecase.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [GetChampionListUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetChampionListUseCase extends _i1.Mock
    implements _i2.GetChampionListUseCase {
  MockGetChampionListUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Champion>> execute(String? version, _i5.Locale? lang) =>
      (super.noSuchMethod(Invocation.method(#execute, [version, lang]),
              returnValue: Future<List<_i4.Champion>>.value(<_i4.Champion>[]))
          as _i3.Future<List<_i4.Champion>>);
}
