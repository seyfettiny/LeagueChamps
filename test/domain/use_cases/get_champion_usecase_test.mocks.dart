// Mocks generated by Mockito 5.1.0 from annotations
// in leaguechamps/test/domain/use_cases/get_champion_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;
import 'dart:ui' as _i5;

import 'package:leaguechamps/domain/entities/champion_detailed.dart' as _i2;
import 'package:leaguechamps/domain/use_cases/get_champion_usecase.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeChampDetailed_0 extends _i1.Fake implements _i2.ChampDetailed {}

/// A class which mocks [GetChampionUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetChampionUseCase extends _i1.Mock
    implements _i3.GetChampionUseCase {
  MockGetChampionUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ChampDetailed> execute(
          String? champId, String? version, _i5.Locale? lang) =>
      (super.noSuchMethod(Invocation.method(#execute, [champId, version, lang]),
              returnValue:
                  Future<_i2.ChampDetailed>.value(_FakeChampDetailed_0()))
          as _i4.Future<_i2.ChampDetailed>);
}
